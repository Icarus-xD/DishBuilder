// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: dish.sql

package repository

import (
	"context"
	"database/sql"
)

const getByType = `-- name: GetByType :many
SELECT ingredient.title as title, price, ingredient_type.title as type, code 
FROM ingredient
JOIN ingredient_type ON ingredient.type_id=ingredient_type.id
WHERE code = ?
`

type GetByTypeRow struct {
	Title string         `json:"title"`
	Price string         `json:"price"`
	Type  sql.NullString `json:"type"`
	Code  sql.NullString `json:"code"`
}

func (q *Queries) GetByType(ctx context.Context, code sql.NullString) ([]GetByTypeRow, error) {
	rows, err := q.db.QueryContext(ctx, getByType, code)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetByTypeRow
	for rows.Next() {
		var i GetByTypeRow
		if err := rows.Scan(
			&i.Title,
			&i.Price,
			&i.Type,
			&i.Code,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
